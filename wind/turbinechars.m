function [totalenergy, opspeed, oppower] = turbinechars(tchars, ipspeed, t, turbine)
    %{
        This function takes the turbine data (specified below) as input,
        computes the wind speeds as seen by the turbine, calculates the
        power output and filters it as per time response of the turbine and
        finally returns the values.
    
        Args:  
        tchars: turbine characteristics (read from file)
        ipspeed: raw wind speed data (m/s)
        t: time (dimensions should be the same as ipspeed)
        turbine: turbine number
        interval: time interval (in hours)
        
        Returns:
        totalenergy: Total energy generated by 1 turbine in the year as per
                        given wind data
        opspeed: wind speed as seen by turbine
        oppower: power produced by the turbine (after filtering)
    %}
    
    % Get turbine data from file
    rotordia = tchars(turbine, 1);
    cutout = tchars(turbine, 3);
    cutin = tchars(turbine, 2);
    rated = tchars(turbine, 4);
    efficiency = tchars(turbine, 5);
    tou = tchars(turbine, 6);
    
    % Power for (Winds < cutIn speed) and (Winds > cutOut speed) = 0
    ipspeed(ipspeed < cutin) = 0;   
    ipspeed(ipspeed > cutout) = 0; 
    % Power for speed between rated and cutout remain constant
    ipspeed((ipspeed<cutout) & (ipspeed>rated)) = rated; 
    % Other speeds remain as is
    
    % Get the output power for each time
    oppower = windpower(ipspeed, t, rotordia, efficiency);
    
    oppower = oppower/(1e6);
    
    % Appy filter to simulate time response of turbine
    oppower = sfilter(oppower, t, tou); 
    opspeed = ipspeed;
    totalenergy = trapz(t, oppower); % Todo: integrate instead of trapz
end

